# -*- coding: utf-8 -*-
"""
Created on Fri Oct 16 09:43:57 2020

@author: wangjingxian
"""

#237. 删除链表中的节点
'''
请编写一个函数，使其可以删除某个链表中给定的（非末尾）节点。传入函数的唯一参数为 要被删除的节点 。
示例 1：
输入：head = [4,5,1,9], node = 5
输出：[4,1,9]
解释：给定你链表中值为 5 的第二个节点，那么在调用了你的函数之后，该链表应变为 4 -> 1 -> 9.


示例 2：
输入：head = [4,5,1,9], node = 1
输出：[4,5,9]
解释：给定你链表中值为 1 的第三个节点，那么在调用了你的函数之后，该链表应变为 4 -> 5 -> 9.

提示：

	链表至少包含两个节点。
	链表中所有节点的值都是唯一的。
	给定的节点为非末尾节点并且一定是链表中的一个有效节点。
	不要从你的函数中返回任何结果。
'''

'''
如果我们要在链表中删除一个节点，一般的操作是：

修改要删除节点的上一个节点的指针
将该指针指向要删除节点的下一个节点

例如，在链表 [4, 5, 1, 9] 中，当我们要删除节点 5 时，我们会修改节点 5 上一个节点 4 的指针，
让它指向节点 5 的下一个节点，即节点 1：

但这道题只告诉我们要删除的节点，我们并不知道该节点的上一个节点是什么，这时候又该如何是好呢？
既然我们要删除一个节点时需要知道它的上一个节点，如果我们无法得知上一个节点，我们就 找一个可以知道上一个节点的节点，把它变成要删除的节点，然后删除它。
这样听起来好像有些拗口？没事，直接看一个例子！
还是 [4, 5, 1, 9] 链表，还是删除节点 5。
首先，我们把节点 5 下一个节点的值赋给它，把它变成一个「不需要删除」的节点：

这样一来，第二个节点 1 和第三个节点 1，无论我们删除其中的哪一个，都可以得到最终结果 [4, 1, 9]。既然第二个节点不好删除，那我们就果断删除第三个啦~
改变第二个节点 1 的指针，将它指向第 4 个节点 9，这样一来，第三个节点 1 就被删除了：

复杂度

时间复杂度 O(1)
空间复杂度 O(1)

 总结一下
这道题没有给出链表的头节点，而是直接给出要删除的节点，让我们进行原地删除。
我们对于该节点的前一个节点一无所知，所以无法直接执行删除操作。因此，我们将要删除节点的 next 节点的值赋值给要删除的节点，
转而去删除 next 节点，从而达成目的。
题目中指明了「给定的节点为非末尾节点」且「链表至少包含两个节点」，所以上述方案是切实可行的。

'''

class Solution:
    def deleteNode(self,node):
        node.val=node.next.val
        node.next=node.next.next
    
